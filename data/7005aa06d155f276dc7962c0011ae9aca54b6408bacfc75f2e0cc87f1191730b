#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D noise_tex;
uniform int frames;
uniform highp sampler2D tex;
uniform highp vec2 viewport;
uniform highp float progress;
uniform highp vec2 origin;
uniform highp float size;

in highp vec2 texCoord;
layout(location = 0) out highp vec4 fragColor;

void main()
{
    highp float _160 = float(frames);
    highp float _175 = _160 * 0.0333333350718021392822265625;
    highp vec3 _180 = texture(noise_tex, vec2(texCoord.x + ((_160 * 0.0232558138668537139892578125) * sin(texCoord.y * 42.0)), texCoord.y - _175)).xyz;
    highp vec4 _186 = texture(tex, texCoord);
    highp float _534 = _186.x;
    highp float _537 = _186.y;
    highp float _540 = _186.z;
    highp vec3 _207 = max(_180 * vec3(0.100000001490116119384765625, 0.100000001490116119384765625, 0.300000011920928955078125), (_180 * vec3(((0.21600000560283660888671875 * ((0.5 + (0.5 * cos(3.1415927410125732421875 * _534))) * (1.0 - _534))) + (0.715200006961822509765625 * ((0.5 + (0.5 * cos(3.1415927410125732421875 * _537))) * (1.0 - _537)))) + (0.072200000286102294921875 * ((0.5 + (0.5 * cos(3.1415927410125732421875 * _540))) * (1.0 - _540))))).xyz);
    highp vec2 _215 = texCoord * viewport;
    highp float _222 = 32.0 * (1.0 + progress);
    highp float _253 = progress * 1.5;
    highp vec3 _256 = (vec3(1.0) + (vec3(0.00999999977648258209228515625, 0.0199999995529651641845703125, 0.02999999932944774627685546875) * progress)) * 1.0;
    highp float _614 = cos(_175);
    highp float _616 = sin(_175);
    highp mat2 _624 = mat2(vec2(_614, -_616), vec2(_616, _614));
    highp vec2 _274 = vec2(_222, 0.0);
    highp vec3 _287 = (((_256 * pow(_253, 2.0)) - _256) + vec3(1.0)) * size;
    highp vec2 _301 = vec2(0.0, _222);
    highp vec2 _328 = -_274;
    highp vec2 _355 = -_301;
    highp float _382 = _160 * (-0.066666670143604278564453125);
    highp float _834 = cos(_382);
    highp float _836 = sin(_382);
    highp mat2 _844 = mat2(vec2(_834, -_836), vec2(_836, _834));
    highp vec3 _419 = (((_256 * pow(_253, 0.75)) - _256) + vec3(1.0)) * size;
    fragColor = mix(_186, vec4(_207.x, _207.y, _207.z, _186.w), vec4(abs(abs(abs(abs(abs(abs(abs(abs(abs(abs(-step(vec3(length((_215 + (_624 * vec2(0.0))) - origin)), (((_256 * pow(_253, 1.5)) - _256) + vec3(1.0)) * size)) - step(vec3(length((_215 + (_624 * _274)) - origin)), _287)) - step(vec3(length((_215 + (_624 * _301)) - origin)), _287)) - step(vec3(length((_215 + (_624 * _328)) - origin)), _287)) - step(vec3(length((_215 + (_624 * _355)) - origin)), _287)) - step(vec3(length((_215 + (_844 * vec2(0.0))) - origin)), (((_256 * pow(_253, 1.0)) - _256) + vec3(1.0)) * size)) - step(vec3(length((_215 + (_844 * _274)) - origin)), _419)) - step(vec3(length((_215 + (_844 * _301)) - origin)), _419)) - step(vec3(length((_215 + (_844 * _328)) - origin)), _419)) - step(vec3(length((_215 + (_844 * _355)) - origin)), _419)), 0.0));
}

