#version 300 es
precision mediump float;
precision highp int;

uniform highp vec2 center;
uniform highp float inv_aspect_ratio;
uniform highp float R;
uniform highp vec2 bg_translation;
uniform highp sampler2D tex;
uniform highp sampler2D tex2;
uniform highp sampler2D blend_mask;
uniform highp vec4 r_color;

in highp vec2 texCoordRaw;
layout(location = 0) out highp vec4 fragColor;

void main()
{
    highp vec2 _100 = texCoordRaw - center;
    highp float _106 = _100.y * inv_aspect_ratio;
    highp vec2 _299 = _100;
    _299.y = _106;
    highp float _113 = length(_299) / R;
    if (_113 < 2.5980761051177978515625)
    {
        discard;
    }
    highp float _253 = atan(_106, _100.x);
    highp float _274 = (3.1415927410125732421875 + (2.0 / _113)) - (2.5 * log(tanh(1.13600003719329833984375 * pow(_113 - 2.5980761051177978515625, 0.4050000011920928955078125))));
    highp float _278 = cos(_274);
    highp vec2 _281 = vec2(_278, sin(_274));
    highp float _286 = cos(_253);
    highp float _288 = sin(_253);
    highp vec2 _142 = mat2(vec2(_286, -_288), vec2(_288, _286)) * vec3(_281.y, vec3(0.0).y, _281.x).xy;
    highp float _150 = _142.x;
    highp vec2 _190 = (_142.xy + bg_translation).xy;
    fragColor = r_color * mix(texture(tex, _190 + vec2(0.5, 0.0)), texture(tex2, _190 + vec2(0.5)), vec4(clamp(mix(smoothstep(0.20000000298023223876953125, 0.0, _150 + 0.100000001490116119384765625) + smoothstep(-0.60000002384185791015625, 0.0, _278 + 0.100000001490116119384765625), smoothstep(0.20000000298023223876953125, 0.0, _150) + smoothstep(-0.60000002384185791015625, 0.0, _278), texture(blend_mask, _190).x), 0.0, 1.0)));
    highp vec3 _228 = fragColor.xyz * smoothstep(2.5980761051177978515625, 2.6280763149261474609375, _113);
    fragColor = vec4(_228.x, _228.y, _228.z, fragColor.w);
}

