#version 300 es
precision mediump float;
precision highp int;

uniform highp vec2 blur_orig;
uniform highp float ratio;
uniform highp float blur_rad;
uniform highp sampler2D tex;
uniform highp vec2 fix_orig;
uniform highp vec4 color;
uniform highp float rad;

in highp vec2 texCoordRaw;
layout(location = 0) out highp vec4 fragColor;

void main()
{
    highp vec2 _256 = texCoordRaw - blur_orig;
    highp vec2 _259 = vec2(1.0, ratio);
    highp vec3 _267 = vec3(1.03499996662139892578125, 1.07000005245208740234375, 1.105000019073486328125) * vec3(length(_256 * _259) / blur_rad);
    highp vec3 _405;
    if (all(greaterThan(_267, vec3(0.939999997615814208984375))))
    {
        _405 = texture(tex, texCoordRaw).xyz;
    }
    else
    {
        highp vec3 _286 = sqrt(tanh(((_267 * 4.0) * _267) * _267));
        highp float _289 = _286.x;
        highp float _327 = 6.283185482025146484375 * _289;
        highp float _338 = cos(_327);
        highp float _340 = sin(_327);
        highp float _295 = _286.y;
        highp float _356 = 6.283185482025146484375 * _295;
        highp float _366 = cos(_356);
        highp float _368 = sin(_356);
        highp float _301 = _286.z;
        highp float _384 = 6.283185482025146484375 * _301;
        highp float _394 = cos(_384);
        highp float _396 = sin(_384);
        _405 = vec3(texture(tex, mix((_256 * _289) * mat2(vec2(_338, -_340), vec2(_340, _338)), _256, vec2(_289)) + blur_orig).x, texture(tex, mix((_256 * _295) * mat2(vec2(_366, -_368), vec2(_368, _366)), _256, vec2(_295)) + blur_orig).y, texture(tex, mix((_256 * _301) * mat2(vec2(_394, -_396), vec2(_396, _394)), _256, vec2(_301)) + blur_orig).z);
    }
    fragColor.x = _405.x;
    fragColor.y = _405.y;
    fragColor.z = _405.z;
    fragColor.w = 1.0;
    fragColor *= pow(color, vec4(3.0 * max(0.0, rad - length((texCoordRaw - fix_orig) * _259))));
}

