#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D tex;

layout(location = 0) out highp vec4 fragColor;
in highp vec2 texCoordRaw;
in highp vec4 customParams;
in highp vec4 texRegion;
in highp vec4 color;

void main()
{
    highp vec4 _364;
    _364 = vec4(0.0);
    highp vec4 _283;
    for (highp float _363 = 0.0; _363 <= 1.0; _364 = _283, _363 += 0.25)
    {
        highp vec2 _300 = vec2(0.5) - texCoordRaw;
        highp vec2 _307 = step(_300, vec2(0.0));
        highp vec2 _325 = vec2(1.0) - (_307 + ((vec2(1.0) - (_307 * 2.0)) * ((pow(((vec2(0.5) + abs(texCoordRaw - vec2(0.5))) * 2.0) - vec2(1.0), vec2(1.0 + ((customParams.x * _363) * length(_300)))) + vec2(1.0)) * 0.5)));
        highp float _348 = _325.x;
        highp float _358 = _325.y;
        highp vec4 _253 = texture(tex, vec2(mix(texRegion.x, texRegion.x + texRegion.z, _348), 1.0 - mix(texRegion.y, texRegion.y + texRegion.w, 1.0 - _358)));
        bool _256 = _348 >= 0.0;
        bool _262;
        if (_256)
        {
            _262 = _348 <= 1.0;
        }
        else
        {
            _262 = _256;
        }
        bool _268;
        if (_262)
        {
            _268 = _358 >= 0.0;
        }
        else
        {
            _268 = _262;
        }
        bool _274;
        if (_268)
        {
            _274 = _358 <= 1.0;
        }
        else
        {
            _274 = _268;
        }
        _283 = _364 + ((color * _253.w) * float(_274));
    }
    highp vec4 _290 = _364 * vec4(0.20000000298023223876953125);
    if (all(lessThan(_290, vec4(1.525902189314365386962890625e-05))))
    {
        discard;
    }
    fragColor = _290;
}

