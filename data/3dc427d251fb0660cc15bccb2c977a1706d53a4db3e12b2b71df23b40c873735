#version 300 es
precision mediump float;
precision highp int;

uniform int samples;
uniform highp float radius;
uniform highp sampler2D tex;
uniform highp mat4 r_textureMatrix;
uniform highp float intensity;

in highp vec2 texCoordRaw;
layout(location = 0) out highp vec4 fragColor;
in highp vec2 texCoord;

void main()
{
    highp float _31 = float(samples);
    highp float _32 = 6.283185482025146484375 / _31;
    highp vec4 _127;
    _127 = vec4(0.0);
    for (int _126 = 0; _126 < samples; )
    {
        highp float _50 = _32 * float(_126);
        _127 += texture(tex, (r_textureMatrix * vec4(clamp(texCoordRaw + (vec2(cos(_50), sin(_50)) * radius), vec2(0.0), vec2(0.89999997615814208984375)), 0.0, 1.0)).xy);
        _126++;
        continue;
    }
    highp vec4 _93 = _127 / vec4(_31);
    fragColor = texture(tex, texCoord) + (((_93 * intensity) * _93) * 10.0);
}

