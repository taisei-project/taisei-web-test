#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D tex;
uniform highp vec4 r_viewport;
uniform highp sampler2D tex_aux[3];

layout(location = 0) out highp vec4 fragColor;
in highp vec4 customParams;
in highp vec4 color;
in highp vec2 texCoord;

void main()
{
    highp vec4 _400;
    do
    {
        highp vec4 _280 = texture(tex, texCoord);
        highp vec4 _281 = color * _280;
        if (customParams.y == 0.0)
        {
            _400 = _281;
            break;
        }
        uint _377 = floatBitsToUint(customParams.z);
        highp vec2 _384 = vec2(float(_377 & 65535u), float(_377 >> uint(16)));
        highp vec2 _300 = gl_FragCoord.xy / r_viewport.zw;
        highp vec3 _327 = mix(_281.xyz, (vec3(0.5, 0.699999988079071044921875, 1.0) * (_281.w * texture(tex_aux[0], (vec2(1.0, 20.0) * _300 + (_384 * vec2(1.525902189314365386962890625e-05))) + vec2(customParams.w)).x)) * (0.072200000286102294921875 * _281.z + (0.21600000560283660888671875 * _281.x + (0.715200006961822509765625 * _281.y))), vec3(customParams.y));
        highp vec4 _408 = _281;
        _408.x = _327.x;
        _408.y = _327.y;
        _408.z = _327.z;
        highp vec4 _341 = texture(tex_aux[0], _384 * vec2(1.525902189314365386962890625e-05) + (_300 * 4.0));
        highp float _342 = _341.x;
        highp float _348 = 1.0 - smoothstep(customParams.x, customParams.x + 0.20000000298023223876953125, _342);
        highp float _354 = 1.0 - smoothstep(customParams.x, customParams.x + 0.100000001490116119384765625, _342);
        _400 = mix(_408 * _348, (mix(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 0.25, 0.0, 0.0), vec4(_354)) * 20.0) * _281.w, vec4(_348 - _354));
        break;
    } while(false);
    if (all(lessThan(_400, vec4(1.525902189314365386962890625e-05))))
    {
        discard;
    }
    fragColor = _400;
}

