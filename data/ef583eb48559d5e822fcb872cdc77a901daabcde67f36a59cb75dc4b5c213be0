#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D depth;
uniform highp float curvature;
uniform highp float exponent;
uniform highp float end;
uniform highp float start;
uniform highp sampler2D tex;
uniform highp vec4 fog_color;
uniform highp vec3 exposure;

in highp vec2 texCoord;
in highp vec2 texCoordRaw;
layout(location = 0) out highp vec4 fragColor;

void main()
{
    highp vec4 _239 = fog_color * (1.0 - clamp((end - pow(curvature * length(texCoordRaw - vec2(0.5, 0.0)) + texture(depth, texCoord).x, exponent)) / (end - start), 0.0, 1.0));
    highp vec4 _285 = _239 + (texture(tex, texCoord) * (1.0 - _239.w));
    highp vec3 _247 = _285.xyz;
    highp vec3 _248 = exposure * _247;
    highp vec3 _353 = smoothstep(vec3(0.0), vec3(0.2199999988079071044921875), _248);
    highp vec3 _361 = step(vec3(0.532000005245208740234375), _248);
    highp vec3 _412 = (vec3(1.0) - (exp((exposure * _247 + vec3(-0.532000005245208740234375)) * (-2.13675212860107421875)) * 0.467999994754791259765625)) * _361 + ((pow(_248 * vec3(4.545454502105712890625), vec3(1.33000004291534423828125)) * 0.2199999988079071044921875) * (vec3(1.0) - _353) + ((vec3(0.2199999988079071044921875) + ((exposure * _247 + vec3(-0.2199999988079071044921875)) * 1.0)) * (_353 - _361)));
    highp vec4 _438 = _285;
    _438.x = _412.x;
    _438.y = _412.y;
    _438.z = _412.z;
    highp vec3 _416 = pow(_438.xyz, vec3(0.4545454680919647216796875));
    highp vec4 _444 = _438;
    _444.x = _416.x;
    _444.y = _416.y;
    _444.z = _416.z;
    fragColor = _444;
}

